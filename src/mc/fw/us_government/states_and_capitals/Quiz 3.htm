<html>

<head>
<title>States &amp; Capitals</title>
<!-- Made with executable version 6.0 Release 4 Build 27 -->
<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->
<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.0 Release 4 Build 27 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Geneva,Arial,sans-serif;
	background-color: #C0C0C0;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table, div, span, td{
	font-size: 100%;
	color: #000000;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #000000;
}

button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000000;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000000;
}

div.StdDiv{
	background-color: #FFFFFF;
	text-align: center;
	font-size: 100%;
	color: #000000;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Geneva,Arial,sans-serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000000;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000000;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #000000;
}

.LeftItem{
	font-size: 100%;
	color: #000000;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000000;
}

span.CorrectMark{

}

input, textarea{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #C0C0C0;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000000;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000000;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000000;
	border-color: #000000;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #FFFFFF;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #FFFFFF;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #000000;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Geneva,Arial,sans-serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #000000;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	color: #000000;
	background-color: #FFFFFF;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #FFFFFF;
	text-align: center;
	border-style: solid;

	border-left-color: #ffffff;
	border-top-color: #ffffff;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;

	background-color: #000000;
	color: #FFFFFF;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #FFFFFF;
	text-align: center;
	border-style: solid;

	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #ffffff;
	border-bottom-color: #ffffff;
	background-color: #000000;
	color: #FFFFFF;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #000000;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #000000;
	border-bottom-color: #000000;
	background-color: #000000;
	color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #000000;
	border-bottom-color: #000000;
	color: #000000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #000000;
	border-top-color: #000000;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	color: #000000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #0000FF;
}

a:visited{
	color: #0000CC;
}

a:hover{
	color: #0000FF;
}

div.CardStyle {
	position: absolute;
	font-family: Geneva,Arial,sans-serif;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #FFFFFF;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


       </style>
<script type="text/javascript">

//<![CDATA[

<!--



function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (document.documentElement && document.documentElement.scrollTop){
		return document.documentElement.scrollTop;
	}
	else{
		if (document.body){
 			return document.body.scrollTop;
		}
		else{
			return window.pageYOffset;
		}
	}
}

function GetViewportHeight(){
	if (window.innerHeight){
		return window.innerHeight;
	}
	else{
		return document.getElementsByTagName('body')[0].clientHeight;
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




var CurrItem = null;
var Stage = 2;
var QList = new Array();
var ShuffleQs = false;
	
function SetUpItems(){

	var i;
	var Row = null;

//Remove all the table rows and put them in an array for processing
	var Qs = document.getElementById('Questions');

//Remove the table rows to an array
	while (Qs.getElementsByTagName('tr').length > 0){
		Row = Qs.getElementsByTagName('tr')[0];
		Row.getElementsByTagName('td')[0].className = 'Hidden';
		Row.getElementsByTagName('td')[1].className = 'Hidden';
		QList.push(Qs.removeChild(Row));
	}
	
//Shuffle the rows
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}

//Write the rows back to the table body
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
	}
}

function StartUp(){

	SetUpItems();




}

var Started = false;

function DeleteItem(){
	if ((CurrItem == null)||(document.getElementById('Questions').getElementsByTagName('tr').length < 1)){return;}
	
//Delete the current item
	var DelItem = CurrItem;
	Stage = 2;
	ShowItem();
	document.getElementById('Questions').removeChild(DelItem);
}

function ShowItem(){
	var Qs = document.getElementById('Questions');

	var Len = Qs.getElementsByTagName('tr').length;

//Bail if no more items
	if (Len < 1){
		return;
	}
	
//if no current item, get the last item so we roll forward
	if (CurrItem == null){
		CurrItem = Qs.getElementsByTagName('tr')[Len-1];
		if (CurrItem == null){
			return;
		}
	}
	
//if CurrItem has been fully shown, move to the next one
	if (Stage == 2){
		CurrItem.getElementsByTagName('td')[0].className = 'Hidden';
		CurrItem.getElementsByTagName('td')[1].className = 'Hidden';
		if (CurrItem.nextSibling != null){
			CurrItem = CurrItem.nextSibling;
		}
		else{
			CurrItem = Qs.getElementsByTagName('tr')[0];
		}
	}
	
//Show the appropriate bits
	if (Stage == 2){
//Show the first item and hide the second
		CurrItem.getElementsByTagName('td')[0].className = 'Showing';
		CurrItem.getElementsByTagName('td')[1].className = 'Hidden';
		Stage = 1;
	}
	else{
//Show both items
		CurrItem.getElementsByTagName('td')[0].className = 'Showing';
		CurrItem.getElementsByTagName('td')[1].className = 'Showing';
		Stage = 2;		
	}
	

}



//-->

//]]>

       </script>
</head>

<!--<body>Fool those dumb ad-inserting ISPs</body>-->
<body onload="StartUp()" id="TheBody">

<!-- BeginTopNavButtons -->
<div class="NavButtonBar" id="TopNavBar">
  <a href="Quiz%202.htm">
  <img border="0" src="../../../../i/sy/na/Back%204.jpg" width="28" height="28"></a><a href="Index.html"><img border="0" src="../../../../i/sy/na/Index.JPG" width="49" height="27"></a></div>
<!-- EndTopNavButtons -->
<div class="Titles">
  <h2 class="ExerciseTitle">States &amp; Capitals</h2>
  <h3 class="ExerciseSubtitle">Study Cards Exercise</h3>
</div>
<div id="InstructionsDiv" class="StdDiv">
  <div id="Instructions">
    Match the items on the right to the items on the left.</div>
</div>
<div id="MainDiv" class="StdDiv">
  <button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowItem()">
  Next</button>
  <button class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="DeleteItem()">
  Delete</button>
</div>
<table class="FlashcardTable" border="0" cellspacing="0" height="998">
  <tbody id="Questions">
    <tr class="FlashcardRow" id="I_0">
      <td id="L_0" height="18">Alabama</td>
      <td id="R_0" height="18">Montgomery</td>
    </tr>
    <tr class="FlashcardRow" id="I_1">
      <td id="L_1" height="18">Alaska</td>
      <td id="R_1" height="18">Juneau</td>
    </tr>
    <tr class="FlashcardRow" id="I_2">
      <td id="L_2" height="18">Arizona</td>
      <td id="R_2" height="18">Phoenix</td>
    </tr>
    <tr class="FlashcardRow" id="I_3">
      <td id="L_3" height="18">Arkansas</td>
      <td id="R_3" height="18">Little Rock</td>
    </tr>
    <tr class="FlashcardRow" id="I_4">
      <td id="L_4" height="18">California</td>
      <td id="R_4" height="18">Sacramento</td>
    </tr>
    <tr class="FlashcardRow" id="I_5">
      <td id="L_5" height="18">Colorado</td>
      <td id="R_5" height="18">Denver</td>
    </tr>
    <tr class="FlashcardRow" id="I_6">
      <td id="L_6" height="16">Connecticut</td>
      <td id="R_6" height="16">Hartford</td>
    </tr>
    <tr class="FlashcardRow" id="I_7">
      <td id="L_7" height="18">Delaware</td>
      <td id="R_7" height="18">Dover</td>
    </tr>
    <tr class="FlashcardRow" id="I_8">
      <td id="L_8" height="18">Florida</td>
      <td id="R_8" height="18">Tallahassee</td>
    </tr>
    <tr class="FlashcardRow" id="I_9">
      <td id="L_9" height="18">Georgia</td>
      <td id="R_9" height="18">Atlanta</td>
    </tr>
    <tr class="FlashcardRow" id="I_10">
      <td id="L_10" height="18">Hawaii</td>
      <td id="R_10" height="18">Honolulu</td>
    </tr>
    <tr class="FlashcardRow" id="I_11">
      <td id="L_11" height="18">Idaho</td>
      <td id="R_11" height="18">Boise</td>
    </tr>
    <tr class="FlashcardRow" id="I_12">
      <td id="L_12" height="18">Illinois</td>
      <td id="R_12" height="18">Springfield</td>
    </tr>
    <tr class="FlashcardRow" id="I_13">
      <td id="L_13" height="18">Indiana</td>
      <td id="R_13" height="18">Indianapolis</td>
    </tr>
    <tr class="FlashcardRow" id="I_14">
      <td id="L_14" height="18">Iowa</td>
      <td id="R_14" height="18">Des Moines</td>
    </tr>
    <tr class="FlashcardRow" id="I_15">
      <td id="L_15" height="18">Kansas</td>
      <td id="R_15" height="18">Topeka</td>
    </tr>
    <tr class="FlashcardRow" id="I_16">
      <td id="L_16" height="18">Kentucky</td>
      <td id="R_16" height="18">Frankfort</td>
    </tr>
    <tr class="FlashcardRow" id="I_17">
      <td id="L_17" height="18">Louisiana</td>
      <td id="R_17" height="18">Baton Rouge</td>
    </tr>
    <tr class="FlashcardRow" id="I_18">
      <td id="L_18" height="18">Maine</td>
      <td id="R_18" height="18">Augusta</td>
    </tr>
    <tr class="FlashcardRow" id="I_19">
      <td id="L_19" height="18">Maryland</td>
      <td id="R_19" height="18">Annapolis</td>
    </tr>
    <tr class="FlashcardRow" id="I_20">
      <td id="L_20" height="18">Massachusetts</td>
      <td id="R_20" height="18">Boston</td>
    </tr>
    <tr class="FlashcardRow" id="I_21">
      <td id="L_21" height="18">Michigan</td>
      <td id="R_21" height="18">Lansing</td>
    </tr>
    <tr class="FlashcardRow" id="I_22">
      <td id="L_22" height="18">Minnesota</td>
      <td id="R_22" height="18">St. Paul</td>
    </tr>
    <tr class="FlashcardRow" id="I_23">
      <td id="L_23" height="18">Mississippi</td>
      <td id="R_23" height="18">Jackson</td>
    </tr>
    <tr class="FlashcardRow" id="I_24">
      <td id="L_24" height="18">Missouri</td>
      <td id="R_24" height="18">Jefferson City</td>
    </tr>
    <tr class="FlashcardRow" id="I_25">
      <td id="L_25" height="18">Montana</td>
      <td id="R_25" height="18">Helena</td>
    </tr>
    <tr class="FlashcardRow" id="I_26">
      <td id="L_26" height="18">Nebraska</td>
      <td id="R_26" height="18">Lincoln</td>
    </tr>
    <tr class="FlashcardRow" id="I_27">
      <td id="L_27" height="18">Nevada</td>
      <td id="R_27" height="18">Carson City</td>
    </tr>
    <tr class="FlashcardRow" id="I_28">
      <td id="L_28" height="18">New Hampshire</td>
      <td id="R_28" height="18">Concord</td>
    </tr>
    <tr class="FlashcardRow" id="I_29">
      <td id="L_29" height="18">New Jersey</td>
      <td id="R_29" height="18">Trenton</td>
    </tr>
    <tr class="FlashcardRow" id="I_30">
      <td id="L_30" height="18">New Mexico</td>
      <td id="R_30" height="18">Santa Fe</td>
    </tr>
    <tr class="FlashcardRow" id="I_31">
      <td id="L_31" height="18">New York</td>
      <td id="R_31" height="18">Albany</td>
    </tr>
    <tr class="FlashcardRow" id="I_32">
      <td id="L_32" height="18">North Carolina</td>
      <td id="R_32" height="18">Raleigh</td>
    </tr>
    <tr class="FlashcardRow" id="I_33">
      <td id="L_33" height="18">North Dakota</td>
      <td id="R_33" height="18">Bismarck</td>
    </tr>
    <tr class="FlashcardRow" id="I_34">
      <td id="L_34" height="18">Ohio</td>
      <td id="R_34" height="18">Columbus</td>
    </tr>
    <tr class="FlashcardRow" id="I_35">
      <td id="L_35" height="18">Oklahoma</td>
      <td id="R_35" height="18">Oklahoma City</td>
    </tr>
    <tr class="FlashcardRow" id="I_36">
      <td id="L_36" height="18">Oregon</td>
      <td id="R_36" height="18">Salem</td>
    </tr>
    <tr class="FlashcardRow" id="I_37">
      <td id="L_37" height="18">Pennsylvania</td>
      <td id="R_37" height="18">Harrisburg</td>
    </tr>
    <tr class="FlashcardRow" id="I_38">
      <td id="L_38" height="18">Rhode Island</td>
      <td id="R_38" height="18">Providence</td>
    </tr>
    <tr class="FlashcardRow" id="I_39">
      <td id="L_39" height="18">South Carolina</td>
      <td id="R_39" height="18">Columbia</td>
    </tr>
    <tr class="FlashcardRow" id="I_40">
      <td id="L_40" height="18">South Dakota</td>
      <td id="R_40" height="18">Pierre</td>
    </tr>
    <tr class="FlashcardRow" id="I_41">
      <td id="L_41" height="18">Tennessee</td>
      <td id="R_41" height="18">Nashville</td>
    </tr>
    <tr class="FlashcardRow" id="I_42">
      <td id="L_42" height="18">Texas</td>
      <td id="R_42" height="18">Austin</td>
    </tr>
    <tr class="FlashcardRow" id="I_43">
      <td id="L_43" height="18">Utah</td>
      <td id="R_43" height="18">Salt Lake City</td>
    </tr>
    <tr class="FlashcardRow" id="I_44">
      <td id="L_44" height="18">Vermont</td>
      <td id="R_44" height="18">Montpelier</td>
    </tr>
    <tr class="FlashcardRow" id="I_45">
      <td id="L_45" height="18">Virginia</td>
      <td id="R_45" height="18">Richmond</td>
    </tr>
    <tr class="FlashcardRow" id="I_46">
      <td id="L_46" height="18">Washington</td>
      <td id="R_46" height="18">Olympia</td>
    </tr>
    <tr class="FlashcardRow" id="I_47">
      <td id="L_47" height="18">West Virginia</td>
      <td id="R_47" height="18">Charleston</td>
    </tr>
    <tr class="FlashcardRow" id="I_48">
      <td id="L_48" height="18">Wisconsin</td>
      <td id="R_48" height="18">Madison</td>
    </tr>
    <tr class="FlashcardRow" id="I_49">
      <td id="L_49" height="18">Wyoming</td>
      <td id="R_49" height="18">Cheyenne</td>
    </tr>
</table>
<!-- BeginBottomNavButtons -->
<div class="NavButtonBar" id="BottomNavBar">
  <a href="Index.html">
  <img border="0" src="../../../../i/sy/na/Index.JPG" width="49" height="27"></a></div>
<!-- EndBottomNavButtons -->
<!-- BeginSubmissionForm -->
<!-- EndSubmissionForm -->

</body>

</html>
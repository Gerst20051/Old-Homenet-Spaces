<html>

<head>
<title>Computer Hardware</title>
<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName
//HBS extension
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = "ns"
	else if (b=="Microsoft Internet Explorer") this.b = "ie"
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=4)
	this.ns4 = (this.b=="ns" && this.v==4)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	this.min = (this.ns||this.ie)
	this.CRAPBrowser = (this.ie && this.mac); //Cannot Resolve Addresses Properly
}

is = new BrowserCheck();

var LocFolder = GetFolder(window.location.href);
function GetFolder(LocPath){
	LocPath = ReplaceStuff('\'','%27',LocPath);
	var i = LocPath.lastIndexOf('/');
	if (i<0){i=LocPath.lastIndexOf('\\')};
	return LocPath.substring(0,i);
}

function CombineURLs(InURL){
	var i = InURL.indexOf('../');
	var s = LocFolder;
	while (i >- 1){
		s = GetFolder(s);
		InURL = InURL.substring(3,InURL.length);
		i = InURL.indexOf('../');
	}
	return s + '/' + InURL;
}

x = new Array();
function ResolveURLs(InText,Attribute){
	x.length=0;
	var Temp = InText.toLowerCase();
	var z;
	var AttLen = Attribute.length + 2;
	var y=Temp.lastIndexOf(Attribute + '="');
	while (y>-1){
		var sLoc = y+AttLen;
		if (Temp.substring(sLoc,sLoc+5) != 'http:'){
			x[x.length]=new Array();
			x[x.length-1][0] = sLoc;
			z = Temp.indexOf('"',sLoc);
			x[x.length-1][1] = z;
			x[x.length-1][2] = Temp.substring(sLoc,z);
		}
		Temp = Temp.substring(0,y);
		y=Temp.lastIndexOf(Attribute + '="');
	}
	for (var j=0; j<x.length; j++){
		InText = InText.substring(0,x[j][0]) + CombineURLs(x[j][2]) + InText.substring(x[j][1], InText.length);
	}
	return InText;
}

function ResolveAllURLs(Stuff){
	Stuff = ResolveURLs(Stuff,'href');
	Stuff = ResolveURLs(Stuff,'src');
	Stuff = ResolveURLs(Stuff,'parent.location');
	return Stuff;
}


var ExBGColor = '#bbbbee';



var PageBGColor = '#ffffff';



var NavBarColor = '#000066';


var TextColor = '#000000';
var CurrQNum = 0;
var ALetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
var CorrectIndicator = ':-)';
var IncorrectIndicator = 'X';
var YourScoreIs = 'Your score is ';
var Tries = 0;
var CorrectChoices = 0;
var ContinuousScoring = true;
var CorrectFirstTime = 'Questions answered correctly first time: ';var ExerciseTitle = 'Computer Hardware Part A';
var ExerciseSubtitle = 'Multiple-choice exercise';
var Instructions = 'Choose the correct answer for each question.'; //'';
var ShuffleQs = false;
var ShuffleAs = false;
var DefaultRight = 'Correct!';
var DefaultWrong = 'Sorry! Try again.';
var QsToShow = 22;
var ShowOneByOne = true;
var ReadingURL = '';
var EraseFeedback = true;
var Score = 0;

var PreviousPage = history.length;







var NavBar='';



var TitleCode = '<tr><td align="center" valign="middle" bgcolor="#ffffff">';
TitleCode += '<font size="+1" face="Geneva,Arial" color="#000033">' + ExerciseTitle + '</font><br />';
TitleCode += '<font size="-1" face="Geneva,Arial" color="#000033">' + ExerciseSubtitle + '<br />';
TitleCode += '</font></td></tr>';

var QButtonsOpener = '<table border="0" width="85%" cellpadding="10">';
QButtonsOpener += '<tr><td align="center" valign="middle"><form>';
QButtonsOpener += '<font size="+1"><input type="button" value="&lt;=" onclick="parent.ChangeQ(-1)"></input>';
var QButtonsCloser = '<input type="button" value="=&gt;" onclick="parent.ChangeQ(1)"></input>';
QButtonsCloser += '</font></form></td></tr></table>';

var TableOpener = '<form name="QForm">';
TableOpener += '<table border="0" width="85%">';
var QRow = '<tr><td valign="top" bgcolor="#bbbbee" align="right">';
QRow += '<font size="+1" face="Geneva,Arial" color="#000000">[QNumber]</font></td>';
QRow += '<td colspan="3" valign="top" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Question]<br />&nbsp;';
QRow += '</font></td></tr>';

var ARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee"><input type="text" value=" " size="3" name="FB_[QNum]_[ANum]"></input></td>';
ARow += '<td valign="top" bgcolor="#bbbbee"><input type="button" value="[ALetter]" OnClick="parent.CheckAnswer([QNum],[ANum])"></input></td>';
ARow += '<td width="100%" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var MARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee" colspan="3"><input type="checkbox" name="A_[QNum]_[ANum]" value="[Correct]"></input>';
MARow += '<font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var CheckButton = '<tr><td></td><td valign="top" bgcolor="#bbbbee" ><input type="button" value="Check"';
CheckButton += ' onclick="parent.CheckMulti([QNum])"></input></td></tr>';

TableCloser = '</table></form>';

function GoBack(){
	var BackSkip = history.length - PreviousPage;
	if (BackSkip > 0){
		history.go((BackSkip+1)*-1);
	}
	else{
		parent.history.back();
	}
}

function ReduceItems(){
	var ItemToDump=0;
	var j=0;
	while (I.length > QsToShow){
		ItemToDump = Math.floor(I.length*Math.random());
		for (j=ItemToDump; j<(I.length-1); j++){
			I[j] = I[j+1];
		}
		I.length = I.length-1;
	}
}

function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteFeedback(Feedback) {
	if (is.CRAPBrowser){Feedback=ResolveAllURLs(Feedback);}
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += NavBar;
	if (Feedback.length>0){
		OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
		OutString += '<font face="Geneva,Arial" size="-1" color="#000000">';
		OutString += Feedback;
		OutString += '</font></td></tr>'
	}
	OutString += '</table></center></body></html>';
//Write it to the frame
	TopFrame.document.clear();
	TopFrame.document.open();
	TopFrame.document.write(OutString);
	TopFrame.document.close();
}

function StartUp(){




//Reduce array if required
	if (QsToShow < I.length){
		ReduceItems();
	}

//Shuffle stuff if required

	if (ShuffleQs == true){
		I = Shuffle(I);
	}

	if (ShuffleAs == true){
		for (var i=0; i<I.length; i++){
			I[i][1] = Shuffle(I[i][1]);
		}
	}

//Create arrays
	CreateStatusArrays();



//Show the first question or all of them
	if (ShowOneByOne == false){
		ShowAllQs();
	}
	else{
		ShowQuestion(CurrQNum);
	}

//Write the top frame
	WriteFeedback(Instructions);
}


I = new Array();

I[0] = new Array();
I[0][0]='Which of the following suggestions will make your computer work station more comfortable?';
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0]='Work at least four hours at a time without breaks';
I[0][1][0][1]='X';
I[0][1][0][2] = 0;
I[0][1][1] = new Array();
I[0][1][1][0]='Sit with your legs wrapped around the chair legs';
I[0][1][1][1]='X';
I[0][1][1][2] = 0;
I[0][1][2] = new Array();
I[0][1][2][0]='Use a comfortable, adjustable chair';
I[0][1][2][1]=':-)';
I[0][1][2][2] = 1;
I[0][1][3] = new Array();
I[0][1][3][0]='Use the CD-ROM drive as a can holder for a soft drink';
I[0][1][3][1]='X';
I[0][1][3][2] = 0;
I[0][2] = 0;

I[1] = new Array();
I[1][0]='A huge network of computer influencing the changing role of technology by providing digital, voice, and video communication all over the world is known as the:';
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0]='Communication commander.';
I[1][1][0][1]='X';
I[1][1][0][2] = 0;
I[1][1][1] = new Array();
I[1][1][1][0]='Information superhighway.';
I[1][1][1][1]=':-)';
I[1][1][1][2] = 1;
I[1][1][2] = new Array();
I[1][1][2][0]='Information storage center.';
I[1][1][2][1]='X';
I[1][1][2][2] = 0;
I[1][1][3] = new Array();
I[1][1][3][0]='Utility service system.';
I[1][1][3][1]='X';
I[1][1][3][2] = 0;
I[1][2] = 0;

I[2] = new Array();
I[2][0]='Playing a lifelike video game while wearing special gear such as goggles and gloves with wires that track hand movements, is an example of:';
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0]='Artificial intelligence.';
I[2][1][0][1]='X';
I[2][1][0][2] = 0;
I[2][1][1] = new Array();
I[2][1][1][0]='Computer imaging.';
I[2][1][1][1]='X';
I[2][1][1][2] = 0;
I[2][1][2] = new Array();
I[2][1][2][0]='Robotics.';
I[2][1][2][1]='X';
I[2][1][2][2] = 0;
I[2][1][3] = new Array();
I[2][1][3][0]='Virtual reality.';
I[2][1][3][1]=':-)';
I[2][1][3][2] = 1;
I[2][2] = 0;

I[3] = new Array();
I[3][0]='A hardware device that sores data and programs, executes program instructions, and performs arithmetic/logic operations is known as the:';
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0]='CPU (central processing unit).';
I[3][1][0][1]=':-)';
I[3][1][0][2] = 1;
I[3][1][1] = new Array();
I[3][1][1][0]='Integrated circuits.';
I[3][1][1][1]='X';
I[3][1][1][2] = 0;
I[3][1][2] = new Array();
I[3][1][2][0]='Main storage.';
I[3][1][2][1]='X';
I[3][1][2][2] = 0;
I[3][1][3] = new Array();
I[3][1][3][0]='Memory.';
I[3][1][3][1]='X';
I[3][1][3][2] = 0;
I[3][2] = 0;

I[4] = new Array();
I[4][0]='Which of the following statements is TRUE concerning maintenance of computer hardware?';
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0]='One should periodically clean hardware with appropriate cleaners';
I[4][1][0][1]=':-)';
I[4][1][0][2] = 1;
I[4][1][1] = new Array();
I[4][1][1][0]='Dust will not affect hardware';
I[4][1][1][1]='X';
I[4][1][1][2] = 0;
I[4][1][2] = new Array();
I[4][1][2][0]='Less expensive printers are easier to maintain';
I[4][1][2][1]='X';
I[4][1][2][2] = 0;
I[4][1][3] = new Array();
I[4][1][3][0]='Monitors should be turned off frequently';
I[4][1][3][1]='X';
I[4][1][3][2] = 0;
I[4][2] = 0;

I[5] = new Array();
I[5][0]='The small desk-size computer designed for education and business is called a:';
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0]='Laptop.';
I[5][1][0][1]='X';
I[5][1][0][2] = 0;
I[5][1][1] = new Array();
I[5][1][1][0]='Microcomputer.';
I[5][1][1][1]=':-)';
I[5][1][1][2] = 1;
I[5][1][2] = new Array();
I[5][1][2][0]='Minicomputer.';
I[5][1][2][1]='X';
I[5][1][2][2] = 0;
I[5][1][3] = new Array();
I[5][1][3][0]='Supercomputer.';
I[5][1][3][1]='X';
I[5][1][3][2] = 0;
I[5][2] = 0;

I[6] = new Array();
I[6][0]='Which of the following will have the LEAST impact on the changing role of technology in our lives?';
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0]='Environment';
I[6][1][0][1]='X';
I[6][1][0][2] = 0;
I[6][1][1] = new Array();
I[6][1][1][0]='Health care';
I[6][1][1][1]='X';
I[6][1][1][2] = 0;
I[6][1][2] = new Array();
I[6][1][2][0]='Dangerous jobs';
I[6][1][2][1]=':-)';
I[6][1][2][2] = 1;
I[6][1][3] = new Array();
I[6][1][3][0]='Transportation';
I[6][1][3][1]='X';
I[6][1][3][2] = 0;
I[6][2] = 0;

I[7] = new Array();
I[7][0]='What is the main purpose for an external storage device?';
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0]='To print hard copies in readable form';
I[7][1][0][1]='X';
I[7][1][0][2] = 0;
I[7][1][1] = new Array();
I[7][1][1][0]='To save time while working on the computer';
I[7][1][1][1]='X';
I[7][1][1][2] = 0;
I[7][1][2] = new Array();
I[7][1][2][0]='To store programs and data until they are needed';
I[7][1][2][1]=':-)';
I[7][1][2][2] = 1;
I[7][1][3] = new Array();
I[7][1][3][0]='To sort information for later use';
I[7][1][3][1]='X';
I[7][1][3][2] = 0;
I[7][2] = 0;

I[8] = new Array();
I[8][0]='If your computer has a hard disk drive, which of the following will most likely BOOT the computer?';
I[8][1] = new Array();
I[8][1][0] = new Array();
I[8][1][0][0]='Hard disk';
I[8][1][0][1]=':-)';
I[8][1][0][2] = 1;
I[8][1][1] = new Array();
I[8][1][1][0]='Application disk';
I[8][1][1][1]='X';
I[8][1][1][2] = 0;
I[8][1][2] = new Array();
I[8][1][2][0]='Data disk';
I[8][1][2][1]='X';
I[8][1][2][2] = 0;
I[8][1][3] = new Array();
I[8][1][3][0]='New disk';
I[8][1][3][1]='X';
I[8][1][3][2] = 0;
I[8][2] = 0;

I[9] = new Array();
I[9][0]='The input device that reads printed characters, symbols, or gaphical images into the computer is the:';
I[9][1] = new Array();
I[9][1][0] = new Array();
I[9][1][0][0]='Sensors.';
I[9][1][0][1]='X';
I[9][1][0][2] = 0;
I[9][1][1] = new Array();
I[9][1][1][0]='Speech recognition.';
I[9][1][1][1]='X';
I[9][1][1][2] = 0;
I[9][1][2] = new Array();
I[9][1][2][0]='Mouse.';
I[9][1][2][1]='X';
I[9][1][2][2] = 0;
I[9][1][3] = new Array();
I[9][1][3][0]='Scanner.';
I[9][1][3][1]=':-)';
I[9][1][3][2] = 1;
I[9][2] = 0;

I[10] = new Array();
I[10][0]='The study of creating an efficient, comfortable, and healthy workplace while working on a computer is called:';
I[10][1] = new Array();
I[10][1][0] = new Array();
I[10][1][0][0]='Economics.';
I[10][1][0][1]='X';
I[10][1][0][2] = 0;
I[10][1][1] = new Array();
I[10][1][1][0]='Ecosystems.';
I[10][1][1][1]='X';
I[10][1][1][2] = 0;
I[10][1][2] = new Array();
I[10][1][2][0]='Ergonomics.';
I[10][1][2][1]=':-)';
I[10][1][2][2] = 1;
I[10][1][3] = new Array();
I[10][1][3][0]='Experts.';
I[10][1][3][1]='X';
I[10][1][3][2] = 0;
I[10][2] = 0;

I[11] = new Array();
I[11][0]='If a repair technicians is not readily available, which of the following can provide help quickly?';
I[11][1] = new Array();
I[11][1][0] = new Array();
I[11][1][0][0]='Emergency medical technician';
I[11][1][0][1]='X';
I[11][1][0][2] = 0;
I[11][1][1] = new Array();
I[11][1][1][0]='A technical support number';
I[11][1][1][1]=':-)';
I[11][1][1][2] = 1;
I[11][1][2] = new Array();
I[11][1][2][0]='Backup disks of your programs';
I[11][1][2][1]='X';
I[11][1][2][2] = 0;
I[11][1][3] = new Array();
I[11][1][3][0]='Backup disks of your data';
I[11][1][3][1]='X';
I[11][1][3][2] = 0;
I[11][2] = 0;

I[12] = new Array();
I[12][0]='Which of the following is TRUE concerning the care of printers?';
I[12][1] = new Array();
I[12][1][0] = new Array();
I[12][1][0][0]='Change the paper while the printer is printing';
I[12][1][0][1]='X';
I[12][1][0][2] = 0;
I[12][1][1] = new Array();
I[12][1][1][0]='Never secure the cable connections';
I[12][1][1][1]='X';
I[12][1][1][2] = 0;
I[12][1][2] = new Array();
I[12][1][2][0]='Dust the printer periodically';
I[12][1][2][1]=':-)';
I[12][1][2][2] = 1;
I[12][1][3] = new Array();
I[12][1][3][0]='Throw away the printer manuals';
I[12][1][3][1]='X';
I[12][1][3][2] = 0;
I[12][2] = 0;

I[13] = new Array();
I[13][0]='All the following factors contribute to the growth in computer use EXCEPT:';
I[13][1] = new Array();
I[13][1][0] = new Array();
I[13][1][0][0]='Cost efficiency.';
I[13][1][0][1]='X';
I[13][1][0][2] = 0;
I[13][1][1] = new Array();
I[13][1][1][0]='Speed and accuracy.';
I[13][1][1][1]='X';
I[13][1][1][2] = 0;
I[13][1][2] = new Array();
I[13][1][2][0]='Our need for more information.';
I[13][1][2][1]='X';
I[13][1][2][2] = 0;
I[13][1][3] = new Array();
I[13][1][3][0]='More difficult programs to learn.';
I[13][1][3][1]=':-)';
I[13][1][3][2] = 1;
I[13][2] = 0;

I[14] = new Array();
I[14][0]='What type computer is the largest, fastest, and most expensive in existence?';
I[14][1] = new Array();
I[14][1][0] = new Array();
I[14][1][0][0]='Laptop';
I[14][1][0][1]='X';
I[14][1][0][2] = 0;
I[14][1][1] = new Array();
I[14][1][1][0]='Mainframe';
I[14][1][1][1]='X';
I[14][1][1][2] = 0;
I[14][1][2] = new Array();
I[14][1][2][0]='Special purpose';
I[14][1][2][1]='X';
I[14][1][2][2] = 0;
I[14][1][3] = new Array();
I[14][1][3][0]='Supercomputers';
I[14][1][3][1]=':-)';
I[14][1][3][2] = 1;
I[14][2] = 0;

I[15] = new Array();
I[15][0]='The small, portable computer with features very similar to a microscomputer is a/an:';
I[15][1] = new Array();
I[15][1][0] = new Array();
I[15][1][0][0]='Laptop.';
I[15][1][0][1]=':-)';
I[15][1][0][2] = 1;
I[15][1][1] = new Array();
I[15][1][1][0]='Mainframe.';
I[15][1][1][1]='X';
I[15][1][1][2] = 0;
I[15][1][2] = new Array();
I[15][1][2][0]='Special purpose.';
I[15][1][2][1]='X';
I[15][1][2][2] = 0;
I[15][1][3] = new Array();
I[15][1][3][0]='Supercomputer.';
I[15][1][3][1]='X';
I[15][1][3][2] = 0;
I[15][2] = 0;

I[16] = new Array();
I[16][0]='Computers are commonly used in all of the following EXCEPT:';
I[16][1] = new Array();
I[16][1][0] = new Array();
I[16][1][0][0]='Evaluating art.';
I[16][1][0][1]=':-)';
I[16][1][0][2] = 1;
I[16][1][1] = new Array();
I[16][1][1][0]='Medical and health care.';
I[16][1][1][1]='X';
I[16][1][1][2] = 0;
I[16][1][2] = new Array();
I[16][1][2][0]='Transportation.';
I[16][1][2][1]='X';
I[16][1][2][2] = 0;
I[16][1][3] = new Array();
I[16][1][3][0]='Weather forecasting.';
I[16][1][3][1]='X';
I[16][1][3][2] = 0;
I[16][2] = 0;

I[17] = new Array();
I[17][0]='Which of the following has NOT had an impact on technology and the home?';
I[17][1] = new Array();
I[17][1][0] = new Array();
I[17][1][0][0]='Electronic banking';
I[17][1][0][1]='X';
I[17][1][0][2] = 0;
I[17][1][1] = new Array();
I[17][1][1][0]='Home security';
I[17][1][1][1]='X';
I[17][1][1][2] = 0;
I[17][1][2] = new Array();
I[17][1][2][0]='Online shopping';
I[17][1][2][1]='X';
I[17][1][2][2] = 0;
I[17][1][3] = new Array();
I[17][1][3][0]='Tracking pollutants';
I[17][1][3][1]=':-)';
I[17][1][3][2] = 1;
I[17][2] = 0;

I[18] = new Array();
I[18][0]='Which of the following is NOT part of the information processing cycle?';
I[18][1] = new Array();
I[18][1][0] = new Array();
I[18][1][0][0]='Databases';
I[18][1][0][1]=':-)';
I[18][1][0][2] = 1;
I[18][1][1] = new Array();
I[18][1][1][0]='Input';
I[18][1][1][1]='X';
I[18][1][1][2] = 0;
I[18][1][2] = new Array();
I[18][1][2][0]='Output';
I[18][1][2][1]='X';
I[18][1][2][2] = 0;
I[18][1][3] = new Array();
I[18][1][3][0]='Storage';
I[18][1][3][1]='X';
I[18][1][3][2] = 0;
I[18][2] = 0;

I[19] = new Array();
I[19][0]='Memory that is NOT lost when a computer\'s power is turned off is:';
I[19][1] = new Array();
I[19][1][0] = new Array();
I[19][1][0][0]='Main memory.';
I[19][1][0][1]='X';
I[19][1][0][2] = 0;
I[19][1][1] = new Array();
I[19][1][1][0]='Primary storage.';
I[19][1][1][1]='X';
I[19][1][1][2] = 0;
I[19][1][2] = new Array();
I[19][1][2][0]='ROM';
I[19][1][2][1]=':-)';
I[19][1][2][2] = 1;
I[19][1][3] = new Array();
I[19][1][3][0]='RAM';
I[19][1][3][1]='X';
I[19][1][3][2] = 0;
I[19][2] = 0;

I[20] = new Array();
I[20][0]='The physical computer equipment that can be touched is known as:';
I[20][1] = new Array();
I[20][1][0] = new Array();
I[20][1][0][0]='Hardware.';
I[20][1][0][1]=':-)';
I[20][1][0][2] = 1;
I[20][1][1] = new Array();
I[20][1][1][0]='Input/output.';
I[20][1][1][1]='X';
I[20][1][1][2] = 0;
I[20][1][2] = new Array();
I[20][1][2][0]='Software.';
I[20][1][2][1]='X';
I[20][1][2][2] = 0;
I[20][1][3] = new Array();
I[20][1][3][0]='Storage.';
I[20][1][3][1]='X';
I[20][1][3][2] = 0;
I[20][2] = 0;

I[21] = new Array();
I[21][0]='The component of the central processing unit that holds instructions, stores data, and keeps results during the porcessing is called the:';
I[21][1] = new Array();
I[21][1][0] = new Array();
I[21][1][0][0]='Arithmetic/Logic unit.';
I[21][1][0][1]='X';
I[21][1][0][2] = 0;
I[21][1][1] = new Array();
I[21][1][1][0]='Control unit.';
I[21][1][1][1]=':-)';
I[21][1][1][2] = 1;
I[21][1][2] = new Array();
I[21][1][2][0]='Main memory.';
I[21][1][2][1]='X';
I[21][1][2][2] = 0;
I[21][1][3] = new Array();
I[21][1][3][0]='Microprocessing chip.';
I[21][1][3][1]='X';
I[21][1][3][2] = 0;
I[21][2] = 0;


Status = new Array();


function CreateStatusArrays(){
	for (var x=0; x<I.length; x++){
		Status[x] = new Array();
		Status[x][0] = 0; // Question not done yet
		Status[x][1] = new Array(); //for tracking whether answers chosen
		for (var y=0; y<I[x][1].length; y++){
			Status[x][1][y] = '0'; //Answers not chosen yet
		}
		Status[x][2] = 0; //Wrong tries at this question so far
		Status[x][3] = 0; //For storing score out of one on this question
	}
}

function ReplaceStuff(Token, Replacement, InString){
	var i = InString.indexOf(Token);
	var FirstBit = '';
	var LastBit = '';
	while (i>-1){
		FirstBit = InString.substring(0, i);
		LastBit = InString.substring(i + Token.length, InString.length);	
		InString = FirstBit + Replacement + LastBit;
		i = InString.indexOf(Token);
	}
	return InString;
}

function ChangeQ(ChangeBy){
	var NewNum = CurrQNum + ChangeBy;
	if ((NewNum >= 0)&&(NewNum<I.length)){
		CurrQNum = NewNum;
		ShowQuestion(CurrQNum);
	}
	var CurrScore = '';
	if ((ContinuousScoring == true)&&(EraseFeedback == true)){
		CurrScore = YourScoreIs + ' ' + Score + '%.';
		WriteFeedback(CurrScore);
	}
}

function BuildQuestion(QNum){
	if (I[QNum][2] == 0){
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);

		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = ARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[ALetter]', ' ' + ALetters.charAt(i) + ' ', TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	else{
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);
		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = MARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[Correct]', I[QNum][1][i][2], TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp += CheckButton;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	return Temp;
}

function DisplayExercise(StuffToDisplay){
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += TitleCode; 
	OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
	OutString += '<font face="Geneva,Arial" size="-1">';
	OutString += StuffToDisplay;
	OutString += '</font></td></tr>';
	OutString += NavBar;
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	BottomFrame.document.clear();
	BottomFrame.document.open();
	BottomFrame.document.write(OutString);
	BottomFrame.document.close();
}


function ShowAllQs(){
	var Output = '';
	for (var i=0; i<I.length-1; i++){
		Output = Output + BuildQuestion(i);
		Output = Output + '<tr><td colspan="4"><hr></hr></td></tr>';
	}
	Output = Output + BuildQuestion(I.length-1);
	Output = TableOpener + Output + TableCloser;
	DisplayExercise(Output);
}

function ShowQuestion(QNum){
//First, create the Q number readout at the top
	var Readout = (QNum+1) + '/' + I.length;
	while (Readout.length < 7){
		Readout = ' ' + Readout + ' ';
	}
	Readout = QButtonsOpener + Readout + QButtonsCloser;

	var Output = BuildQuestion(QNum);

	Output = TableOpener + Output + TableCloser;

	DisplayExercise(Readout + Output);

//Mark the answers already done
	for (i=0; i<Status[QNum][1].length; i++){
		if (Status[QNum][1][i] == 'R'){
			MarkAnswer(QNum,i,true)
		}
		if (Status[QNum][1][i] == 'W'){
			MarkAnswer(QNum,i,false)
		}
		if (Status[QNum][1][i] == 'C'){
			CheckCheckbox(QNum,i);
		}
	}
//Eliminate feedback from previous question
	if (EraseFeedback == true){
		WriteFeedback('');
	}
}

function CheckMulti(QNum){
	var TotWrong = 0;
	var Output = '';
	var TotAns = I[QNum][1].length;
	for (var i=TotAns-1; i>=0; i--){
//Find any incorrect choices

		var b = eval('BottomFrame.document.QForm.A_' + QNum + '_' + i);

		if (b != null){
//if it's wrong, count it
			if (b.checked == true){
				Status[QNum][1][i] = 'C';
			}
			else{
				Status[QNum][1][i] = 'U';
			}
			if (((b.checked == true) && (b.value == "0"))||((b.checked == false)&&(b.value == "1"))){
				TotWrong++;
			}
		}				
	}

	if (TotWrong == 0){
		Output = DefaultRight;
	}
	else{
		Output = DefaultWrong + '<br />' + (TotAns-TotWrong) + '/' + TotAns;
	}

//If you haven't tried the question before
	if (Status[QNum][0] == 0){
		if (TotWrong > 0){
			Status[QNum][2]++;
		}
		if (TotWrong == 0){
			Status[QNum][0] = 1;
//Calculate the score for this question as a floating-point fraction of 1
			Status[QNum][3] =  ((Status[QNum][1].length - Status[QNum][2]) - 1) / (Status[QNum][1].length - 1);
//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
	}

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}
	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			var DoneQs = 0;
			var TotalScore = 0;
			for (var i=0; i<Status.length; i++){
				if (Status[i][0] == 1){
					DoneQs++;
					TotalScore += Status[i][3];
				}
			}
			Score = (Math.floor(100 * (TotalScore/DoneQs)));
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}

}

function CheckAnswer(QNum, ANum){
	var Output = I[QNum][1][ANum][1];

	if (Output==''){
		if (I[QNum][1][ANum][2] == 1){
			Output = DefaultRight;
		}
		else{
			Output = DefaultWrong;
		}
	}

//If it's not been previously answered correctly
	if (Status[QNum][0] == 0){
//If it's a correct answer
		if (I[QNum][1][ANum][2] == 1){
			Status[QNum][0] = 1;//Mark the Q as done
			Status[QNum][1][ANum] = 'R';
			MarkAnswer(QNum, ANum, true);
//Calculate the score for this question as a floating-point fraction of 1
			var PossibleWrongs = 0;
			for (var i=0; i<I[QNum][1].length; i++){
				if (I[QNum][1][i][2] == 0){
					PossibleWrongs++;
				}
			}

			if (PossibleWrongs == 0){PossibleWrongs = 1;}

			Status[QNum][3] = 1 - (Status[QNum][2]/PossibleWrongs);

//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
		else{
			if (Status[QNum][1][ANum] != 'W'){
				Status[QNum][1][ANum] = 'W';
				MarkAnswer(QNum, ANum, false);
				Status[QNum][2]++; //increment wrong tries for this Q
			}
		}
	}

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}
	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			var DoneQs = 0;
			var TotalScore = 0;
			for (var i=0; i<Status.length; i++){
				if (Status[i][0] == 1){
					DoneQs++;
					TotalScore += Status[i][3];
				}
			}
			Score = (Math.floor(100 * (TotalScore/DoneQs)));
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}
}

function MarkAnswer(QNum, ANum, Right){
	var Mark = CorrectIndicator;
	if (Right == false){Mark = IncorrectIndicator;}

	if (eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum).value = Mark;
	}
}

function CheckCheckbox(QNum, ANum){
	if (eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum).checked = true;
	}
}







function Blank(){
	return '<html><body>&copy;Homenet Software. Loading...</body></html>';
}

//-->

//]]>

</script>
</head>

<!--<body>Fool those dumb ad-inserting ISPs</body>-->
<!--For full XHTML 1.0 compatibility, remove the border and framespacing attributes.
These are required for proper display in current browsers, but render the document incompatible. Then, you'll need to add the appropriate Document Type Declaration; use
the W3C XHTML 1 frameset DTD.-->
<frameset rows="18%,*" onload="StartUp()" framespacing="0" border="0">
  <frame src="javascript:parent.Blank()" frameborder="0" name="TopFrame">
  </frame>
  <frame src="javascript:parent.Blank()" frameborder="0" name="BottomFrame">
  </frame>
</frameset>

</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
  <head>
    <title>SET</title>
    <link rel="stylesheet" href="../../CSS/COMMANDS.CSS" type="text/css">
  </head>
  <body>
    <a href="../../Index.html">Home</a>
    &gt; <a href="../../INDEXN.HTM#s">Commands N-Z</a>
    &gt; <a href="../INDEXS.HTM#set">Commands S</a>
    <h1>SET</h1>

    <hr>
    <a name="Description"></a> <b>Description</b>
    | <a href="#Syntax">Syntax</a>
    | <a href="#Parameters">Parameters</a>
    | <a href="#Switches">Switches</a>
    | <a href="#Related">Related</a>
    | <a href="#Notes">Notes</a>
    | <a href="#Examples">Examples</a>
    | <a href="#Errorlevels">Errorlevels</a>
    | <a href="#Availability">Availability</a>
    <p>Displays, sets, or removes the operating system environment
    variables.</p>
    <p>You use environment variables to control the behavior of some
    batch files and programs and to control the way the operating system
    appears and works. The SET command is often used in the AUTOEXEC.BAT
    or CONFIG.SYS files to set environment variables each time you start
    the operating system.</p>

    <hr>
    <a name="Syntax"></a> <b>Syntax</b>
    <p>SET
    <a href="#SwitchHelp">/?</a></p>

    <p>SET
    [[<a href="#SwitchA">/A</a>]
    | [<a href="#SwitchP">/P</a>]]
    <a href="#ParameterVariable">variable</a>=[<a
    href="#ParameterString">string</a>]</p>

    <p>Clear current environment setting:</p>
    <p>SET
    <a href="#ParameterVariable">variable</a>=</p>

    <p>Display current environment settings:</p>
    <p>SET</p>

    <hr>
    <a name="Parameters"></a> <b>Parameters</b>
    <dl>
      <dt><a name="ParameterString"></a> string
      (<a href="../../Version/MSDOS/200.HTM">v2.0</a>
      <a href="../../Version/MSWIN/95.HTM">Win95</a>
      <a href="../../Version/MSWIN/NT31.HTM">NT3.1</a>)</dt>
      <dd>Specifies the string you want to associate with the specified
      variable.</dd>

      <dt><a name="ParameterVariable"></a> variable
      (<a href= "../../Version/MSDOS/200.HTM">v2.0</a>
      <a href="../../Version/MSWIN/95.HTM">Win95</a>
      <a href="../../Version/MSWIN/NT31.HTM">NT3.1</a>)</dt>
      <dd>Specifies the variable you want to set or modify. Variables
      are not case sensitive. Variables can contain spaces.</dd>
    </dl>

    <hr>
    <a name="Switches"></a> <b>Switches</b>
    <dl>
      <dt><a name="SwitchHelp"></a> /?
      (<a href="../../Version/MSWIN/NTXP.HTM">NTXP</a>)</dt>
      <dd>Displays help.</dd>

      <dt><a name="SwitchA"></a> /A
      (<a href="../../Version/MSWIN/NT400.HTM">NT4</a>)</dt>
      <dd>Arithmetic expressions, the expression to be evaluated
      can include the operators:
<pre>
      Grouping           () <a href="../../Version/MSWIN/NT2K.HTM">NT2000</a>
      Separator          , <a href="../../Version/MSWIN/NT2K.HTM">NT2000</a>

      Multiply           *
      Divide             /
      Add                +
      Subtract           -
      Modulus            %

      AND                &amp;
      OR                 |
      XOR                ^
      LSH                &lt;&lt;
      RSH                &gt;&gt;

      Multiply Variable  *=
      Divide Variable    /=
      Add Variable       +=
      Subtract Variable  -=
      Modulus Variable   %= <a href="../../Version/MSWIN/NT2K.HTM">NT2000</a>

      AND Variable       &amp;=
      OR Variable        |=
      XOR Variable       ^=
      LSH Variable       &lt;&lt;=
      RSH Variable       &gt;&gt;=

      octal              0
      hexadecimal        0x
      binary             0b
      (0x12 == 0b10010 == 022 == 18)
</pre>
      </dd>

      <dt><a name="SwitchP"></a> /P
      (<a href="../../Version/MSWIN/NT2K.HTM">NT2000</a>)</dt>
      <dd>Set a variable equal to a line of input entered by
      the user. The string is displayed before the user input
      is read. The string can be empty.</dd>
   </dl>

    <hr>
    <a name="Related"></a> <b>Related</b>
    <p>For information about setting environment variables that the
    operating system uses to control its own operations, see the
    <a href="../P/PATH.HTM">PATH</a>,
    <a href="../P/PROMPT.HTM">PROMPT</a>,
    SHELL, and
    <a href="../D/DIR.HTM">DIR</a> commands.
    <br><a href="SETX.HTM">SETX</a> - Set an environment variable permanently.
    <br><a href="SETLOCAL.HTM">SETLOCAL</a> - Begin localisation of environment variable changes.
    <br><a href="../E/ENDLOCAL.HTM">ENDLOCAL</a> - End localisation of environment changes.
    <br>Parameters - Get full or partial pathname from command-line variable.
    <br>PATHMAN - This Resource Kit utility allows quick modification
    of both the system and user paths. Pathman can resolve many
    problems such as duplicate characters, and can improve
    performance by removing duplicate paths.
    <br><b>Equivalent Linux BASH commands:</b>
    <br>env - Display, set, or remove environment variables.
    <br>export - Set an environment variable.
    <br>set - Manipulate shell variables and functions.</p>

    <hr>
    <a name="Notes"></a> <b>Notes</b>
    <ul>
      <li><a href="#Calling">Calling a SET variable from a batch file</a></li>
      <li><a href="#Displaying">Displaying the current environment settings</a></li>
      <li><a href="#Environment">Effect of SET on environment space</a></li>
      <li><a href="#ParametersNote">Using parameters</a></li>
      <li><a href="#Batch">Using SET in batch files</a></li>
      <li><a href="#Copycmd">Using the %COPYCMD% environment variable</a></li>
      <li><a href="#NoSep">Using the %NO_SEP% environment variable</a></li>
    </ul>

    <hr>
    <a name="Displaying"></a> <b>Displaying the current environment settings</b>
    <p>When you type the SET command alone, the operating system
    displays the current environment settings. These settings usually
    include the <a href="../../ENV/MSDOS/COMSPEC.HTM">%COMSPEC%</a> and
    <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a> environment variables that
    the operating system uses to help find programs on disk.
    <a href="../../ENV/MSDOS/PROMPT.HTM">%PROMPT%</a>,
    <a href="../../ENV/MSDOS/DIRCMD.HTM">%DIRCMD%</a> and
    <a href="../../ENV/MSDOS/COPYCMD.HTM">%COPYCMD%</a> are some other
    environment variables that
    the operating system uses. For more information about
    <a href="../../ENV/MSDOS/DIRCMD.HTM">%DIRCMD%</a>, see the
    <a href="../D/DIR.HTM">DIR</a> command.</p>

    <hr>
    <a name="ParametersNote"></a> <b>Using parameters</b>
    <p>When you use a SET command and specify values for both variable
    and string, the operating system adds the specified variable value
    to the environment and associates the string with that variable.
    If the variable already exists in the environment, the new string
    value replaces the old string value.</p>
    <p>If you specify only a variable and an equal sign (without a
    string) for the SET command, the operating system clears the
    string value associated with the variable (as if the variable is
    not there at all).</p>

    <hr>
    <a name="Batch"></a> <b>Using SET in batch files</b>
    <p>When creating batch files, you can use the SET command to create
    variables and use them in the same way as you would the numbered
    variables %0 through %9. You can also use the variables %0 through
    %9 as input for the SET command.</p>

    <hr>
    <a name="Calling"></a> <b>Calling a SET variable from a batch file</b>
    <p>When you call a variable value from a batch file, you must
    enclose the value with percent signs (%). For example, if your
    batch program creates an environment variable named BAUD, you can
    use the string associated with BAUD as a replaceable parameter by
    inserting %BAUD% on the command-line.</p>

    <hr>
    <a name="Environment"></a> <b>Effect of SET on environment space</b>
    <p>After you use a SET command, the operating system might display
    the message:</p>
<pre>
    Out of environment space
</pre>

    <p>This message means the available environment space is
    insufficient to hold the new variable definition. For information
    about how to increase the environment space, see the
    <a href="../C/COMMAND.HTM">COMMAND</a> command.</p>

    <hr>
    <a name="Copycmd"></a> <b>Using the %COPYCMD% environment variable</b>
    <p>You can set the <a href="../../ENV/MSDOS/COPYCMD.HTM">%COPYCMD%</a>
    environment variable to specify whether
    you want the <a href="../C/COPY.HTM">COPY</a>,
    <a href="../M/MOVE.HTM">MOVE</a>, and
    <a href="../X/XCOPY.HTM">XCOPY</a> commands to prompt you for
    confirmation before overwriting a file, whether issued from the
    command prompt or a batch file.</p>
    <p>To force the <a href="../C/COPY.HTM">COPY</a>,
    <a href="../M/MOVE.HTM">MOVE</a>, and
    <a href="../X/XCOPY.HTM">XCOPY</a> commands to prompt you before
    overwriting in all cases, set the
    <a href="../../ENV/MSDOS/COPYCMD.HTM">%COPYCMD%</a> environment variable to
    <a href="../C/COPY.HTM#SwitchNotY">/-Y</a>. To force these
    commands to overwrite in all cases without prompting you, set the
    <a href="../../ENV/MSDOS/COPYCMD.HTM">%COPYCMD%</a>
    environment variable to
    <a href="../C/COPY.HTM#SwitchY">/Y</a>.</p>
    <p>Typing any of these commands with the
    <a href="../C/COPY.HTM#SwitchY">/Y</a> or
    <a href="../C/COPY.HTM#SwitchNotY">/-Y</a> switch overrides all
    defaults and the current setting of the
    <a href="../../ENV/MSDOS/COPYCMD.HTM">%COPYCMD%</a> environment
    variable.</p>

    <hr>
    <a name="NoSep"></a> <b>Using the %NO_SEP% environment variable</b>
    <p><b>UNDOCUMENTED</b> SET NO_SEP=1 Removes the commas from
    numbers beginning with
    <a href="../../Version/MSDOS/620.HTM">v6.2</a>.</p>
    <p>SET NO_SEP= to turn commas back on.</p>

    <hr>
    <a name="Enhanced"></a> <b>Environment variable substitution has been enhanced</b>
    <p>Beginning with
    <a href="../../Version/MSWIN/NT2K.HTM">Windows 2000</a>
    environment variable substitution has been enhanced:</p>

    <p>Expands the <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a>
    environment variable, substituting each occurrence of "str1" in
    the expanded result with "str2". "str2" can be the empty string
    to effectively delete all occurrences of "str1" from the expanded
    output. "str1" can begin with an asterisk, in which case it will
    match everything from the begining of the expanded output to the
    first occurrence of the remaining portion of "str1":</p>
<pre>
    %PATH:str1=str2%
</pre>

    <p>You may also specify substrings for an expansion:</p>

    <p>Expands the <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a>
    environment variable, and then use only the 5 characters that
    begin at the 11th (offset 10) character of the expanded result.
    If the length is not specified, then it defaults to the remainder
    of the variable value. If either number (offset or length) is
    negative, then the number used is the length of the environment
    variable value added to the offset or length specified:</p>
<pre>
    %PATH:~10,5%
</pre>

    <p>Extracts the last 10 characters of the
    <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a> variable:</p>
<pre>
    %PATH:~-10%
</pre>

    <p>Extracts all but the last 2 characters of the
    <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a> variable:</p>
<pre>
    %PATH:~0,-2%
</pre>

    <p>Finally, support for delayed environment variable expansion
    has been added. This support is always disabled by default, but
    may be enabled/disabled via the
    <a href="../C/CMD.HTM#SwitchV">/V</a> command-line switch to
    <a href="../C/CMD.HTM">CMD.EXE</a>.</p>

    <p>Delayed environment variable expansion is useful for getting
    around the limitations of the current expansion which happens
    when a line of text is read, not when it is executed. This
    example demonstrates the problem with immediate
    variable expansion:</p>
<pre>
    SET <a
href="#ParameterVariable">VAR</a>=<a
href="#ParameterString">before</a>
    <a href="../I/IF.HTM">IF</a> <a
href="../I/IF.HTM#ParameterCompare">"%VAR%" == "before"</a> (
        SET <a
href="#ParameterVariable">VAR</a>=<a
href="#ParameterString">after;</a>
        <a href="../I/IF.HTM">IF</a> <a
href="../I/IF.HTM#ParameterCompare">"%VAR%" == "after"</a> <a
href="../A/ATSIGN.HTM">@</a><a
href="../E/ECHO.HTM">ECHO</a> <a
href="../E/ECHO.HTM#ParameterMessage">If you see this, it worked!</a>
    )
</pre>

    <p>Would never display the message, since the %VAR% in BOTH
    IF statements is substituted when the first IF statement is
    read, since it logically includes the body of the IF, which
    is a compound statement. So the IF inside the compound
    statement is really comparing "before" with "after" which
    will never be equal. Similarly, this example will
    not work as expected:</p>
<pre>
    SET <a
href="#ParameterVariable">LIST</a>=
    <a href="../F/FOR_0.HTM">FOR</a> <a
href="../F/FOR_0.HTM#ParameterVariable">%i</a> IN (<a
href="../F/FOR_0.HTM#ParameterSet">*</a>) DO SET <a
href="#ParameterVariable">LIST</a>=<a
href="#ParameterString">%LIST% %i</a>
    <a href="../E/ECHO.HTM">ECHO</a> <a
href="../E/ECHO.HTM#ParameterMessage">%LIST%</a>
</pre>

    <p>In that it will NOT build up a list of files in the
    current directory, but instead will just set the %LIST%
    variable to the last file found. Again, this is because
    the %LIST% is expanded just once when the FOR statement
    is read, and at that time the LIST variable is empty.
    So the actual FOR loop we are executing is:</p>
<pre>
    <a href="../F/FOR_0.HTM">FOR</a> <a
href="../F/FOR_0.HTM#ParameterVariable">%i</a> IN (<a
href="../F/FOR_0.HTM#ParameterSet">*</a>) DO SET <a
href="#ParameterVariable">LIST</a>= <a
href="#ParameterString">%i</a>
</pre>
    <p>Which just keeps setting LIST to the last file found.</p>

    <p>Delayed environment variable expansion allows you to
    use a different character (the exclamation mark) to expand
    environment variables at execution time. If delayed variable
    expansion is enabled, the above examples could be written
    to work as intended:
<pre>
    SET <a
href="#ParameterVariable">VAR</a>=<a
href="#ParameterString">before</a>
    <a href="../I/IF.HTM">IF</a> <a
href="../I/IF.HTM#ParameterCompare">"%VAR%" == "before"</a> (
        SET <a
href="#ParameterVariable">VAR</a>=<a
href="#ParameterString">after</a>
        <a href="../I/IF.HTM">IF</a> <a
href="../I/IF.HTM#ParameterCompare">"!VAR!" == "after"</a> <a
href="../A/ATSIGN.HTM">@</a><a
href="../E/ECHO.HTM">ECHO</a> <a
href="../E/ECHO.HTM#ParameterMessage">If you see this, it worked!</a>
    )

    SET <a
href="#ParameterVariable">LIST</a>=
    <a href="../F/FOR_0.HTM">FOR</a> <a
href="../F/FOR_0.HTM#ParameterVariable">%i</a> IN (<a
href="../F/FOR_0.HTM#ParameterSet">*</a>) DO SET <a
href="#ParameterVariable">LIST</a>=<a
href="#ParameterString">!LIST! %i</a>
    <a href="../E/ECHO.HTM">ECHO</a> <a
href="../E/ECHO.HTM#ParameterMessage">%LIST%</a>
</pre>

    <hr>
    <a name="Examples"></a> <b>Examples</b>
    <p>To set an environment variable named %INCLUDE% so that the string
    C:\INC (the INC directory on drive C) is associated with it, type:</p>
<pre>
    SET <a
href="#ParameterVariable">INCLUDE</a>=<a
href="#ParameterString">C:\INC</a>
</pre>

    <p>You can then use the string C:\INC in batch files by enclosing
    the name INCLUDE with percent signs (%). For example, you might
    include the command in a batch file in order to display
    the contents of the directory associated with the %INCLUDE%
    environment variable:</p>
<pre>
    <a href="../D/DIR.HTM">DIR</a> %include%
</pre>

    <p>When the operating system processes this command, the string
    C:\INC replaces %INCLUDE%.</p>
    <p>Another possible use for the SET command is in a batch program
    that adds a new directory to the
    <a href="../../ENV/MSDOS/PATH.HTM">%PATH%</a>
    environment variable:</p>
<pre>
    <a href="../A/ATSIGN.HTM">@</a><a
href="../E/ECHO.HTM">ECHO</a> <a
href="../E/ECHO.HTM#ParameterOff">OFF</a>
    <a href="../R/REM.HTM">REM</a> <a
href="../R/REM.HTM#ParameterString">ADDPATH.BAT adds a new directory</a>
    <a href="../R/REM.HTM">REM</a> <a
href="../R/REM.HTM#ParameterString">to the %PATH% environment variable.</a>
    SET <a
href="#ParameterVariable">path</a>=<a
href="#ParameterString">%1;%path%</a>
    SET
</pre>

    <p>As Herbert Kleebauer pointed out in a recent post, SET can be
    CALLed allowing a variable substring to be evaluated:</p>
<pre>
    SET <a
href="#ParameterVariable">start_char</a>=<a
href="#ParameterString">10</a>
    SET <a
href="#ParameterVariable">length</a>=<a
href="#ParameterString">9</a>
    SET <a
href="#ParameterVariable">string</a>=<a
href="#ParameterString">The quick brown fox jumps over the lazy dog</a>
    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#ParameterVariable">substring</a>=<a
href="#ParameterString">%%string:~%start_char%,%length%%%</a>
    <a href="../E/ECHO.HTM">ECHO</a> (<a
href="../E/ECHO.HTM#ParameterMessage">%substring%</a>)

</pre>

    <p>Display all variables that begin with the letter 'P':</p>
<pre>
    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#ParameterVariable">P</a>
</pre>

    <p>and others:</p>
<pre>
    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">2+4</a>
    :: this will return 6

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">2+4</a>
    :: this will return 6

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">2&lt;&lt;3</a>
    :: 2 Lsh 3 = binary 10 Lsh 3 = binary 10000 = decimal 16

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">5 %% 2</a>
    :: 5/2 = 2 + 2 remainder 1 = 1

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">5</a>
    :: 5
    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>+=<a
href="#ParameterString">5</a>
    :: 10
    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>+=<a
href="#ParameterString">5</a>
    :: 15

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">7 &amp;&amp; 6</a>
    :: binary 111 AND binary 110 = binary 110 = 6

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">5 + NUMBER_OF_PROCESSORS</a>
    :: 6

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_result</a>=<a
href="#ParameterString">"NUMBER_OF_PROCESSORS + 5"</a>
    :: 6

    <a href="../C/CALL.HTM">CALL</a> SET <a
href="#SwitchA">/A</a> <a
href="#ParameterVariable">v_day</a>=<a
href="#ParameterString">1%v_day%-100</a>
    :: prevents 0 prefix being interpreted as octal
</pre>

    <hr>
    <a name="Errorlevels"></a> <b>Errorlevels</b>
    <p>none.</p>

    <hr>
    <a name="Availability"></a> <b>Availability</b>
    <dl>
      <dt>Internal</dt>
      <dd>
        <dl>
          <dt>DOS</dt>
          <dd>
          <a href="../../Version/MSDOS/200.HTM">v2.0</a>
          <a href="../../Version/MSDOS/201.HTM">v2.01</a>
          v2.05
          <a href="../../Version/MSDOS/210.HTM">v2.10</a>
          v2.11
          v2.11R
          <a href="../../Version/MSDOS/212.HTM">v2.12</a>
          v2.2
          <a href="../../Version/MSDOS/225.HTM">v2.25</a>
          <a href="../../Version/MSDOS/300.HTM">v3.0</a>
          <a href="../../Version/MSDOS/320.HTM">v3.20</a>
          <a href="../../Version/MSDOS/305.HTM">v3.05</a>
          <a href="../../Version/MSDOS/310.HTM">v3.1</a>
          <a href="../../Version/MSDOS/321.HTM">v3.21</a>
          v3.25
          <a href="../../Version/MSDOS/330.HTM">v3.30</a>
          <a href="../../Version/MSDOS/330A.HTM">v3.3A</a>
          <a href="../../Version/MSDOS/330.HTM">v3.3R</a>
          <a href="../../Version/MSDOS/330T.HTM">v3.3T</a>
          <a href="../../Version/MSDOS/331.HTM">v3.31</a>
          <a href="../../Version/MSDOS/340.HTM">v3.40</a>
          <a href="../../Version/MSDOS/400.HTM">v4.0</a>
          <a href="../../Version/MSDOS/401.HTM">v4.01</a>
          <a href="../../Version/MSDOS/401A.HTM">v4.01A</a>
          <a href="../../Version/MSDOS/500.HTM">v5.0</a>
          <a href="../../Version/MSDOS/500A.HTM">v5.0A</a>
          v5.00.02
          <a href="../../Version/MSDOS/500A.HTM">v5.001A</a>
          v5.01
          <a href="../../Version/MSDOS/502.HTM">v5.02</a>
          <a href="../../Version/MSDOS/600.HTM">v6.0</a>
          <a href="../../Version/MSDOS/610.HTM">v6.10</a>
          <a href="../../Version/MSDOS/620.HTM">v6.2</a>
          <a href="../../Version/MSDOS/621.HTM">v6.21</a>
          <a href="../../Version/MSDOS/622.HTM">v6.22</a>
          v6.23
          <a href="../../Version/MSDOS/700.HTM">v7.00</a>
          <a href="../../Version/MSDOS/700R1.HTM">v7.0R1</a>
          <a href="../../Version/MSDOS/710.HTM">v7.10</a>
          <a href="../../Version/MSDOS/800.HTM">v8.00</a>
          </dd>
          <dt>Windows</dt>
          <dd>
          <a href="../../Version/MSWIN/95.HTM">Win95</a>
          <a href="../../Version/MSWIN/98.HTM">Win98</a>
          <a href="../../Version/MSWIN/ME.HTM">WinME</a>
          </dd>
          <dt>Windows NT</dt>
          <dd>
          <a href="../../Version/MSWIN/NT31.HTM">NT3.1</a>
          <a href="../../Version/MSWIN/NT35.HTM">NT3.5</a>
          <a href="../../Version/MSWIN/NT351.HTM">NT3.51</a>
          <a href="../../Version/MSWIN/NT400.HTM">NT4</a>
          <a href="../../Version/MSWIN/NT2K.HTM">NT2000</a>
          <a href="../../Version/MSWIN/NTXP.HTM">NTXP</a>
          <a href="../../Version/MSWIN/NT2K3.HTM">NT2003</a>
          </dd>
        </dl>
      </dd>
    </dl>

    <hr>
    Last Updated: 2006/12/01
    <br>Direct corrections or suggestions to:
    <a href="mailto:rick_lively@yahoo.com">Rick Lively</a>
  </body>
</html>
